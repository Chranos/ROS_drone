// Generated by gencpp from file transbot_msgs/Headlight.msg
// DO NOT EDIT!


#ifndef TRANSBOT_MSGS_MESSAGE_HEADLIGHT_H
#define TRANSBOT_MSGS_MESSAGE_HEADLIGHT_H

#include <ros/service_traits.h>


#include <transbot_msgs/HeadlightRequest.h>
#include <transbot_msgs/HeadlightResponse.h>


namespace transbot_msgs
{

struct Headlight
{

typedef HeadlightRequest Request;
typedef HeadlightResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Headlight
} // namespace transbot_msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::transbot_msgs::Headlight > {
  static const char* value()
  {
    return "39cb7e9dbd56dfa74d38f52f3463c89d";
  }

  static const char* value(const ::transbot_msgs::Headlight&) { return value(); }
};

template<>
struct DataType< ::transbot_msgs::Headlight > {
  static const char* value()
  {
    return "transbot_msgs/Headlight";
  }

  static const char* value(const ::transbot_msgs::Headlight&) { return value(); }
};


// service_traits::MD5Sum< ::transbot_msgs::HeadlightRequest> should match
// service_traits::MD5Sum< ::transbot_msgs::Headlight >
template<>
struct MD5Sum< ::transbot_msgs::HeadlightRequest>
{
  static const char* value()
  {
    return MD5Sum< ::transbot_msgs::Headlight >::value();
  }
  static const char* value(const ::transbot_msgs::HeadlightRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::transbot_msgs::HeadlightRequest> should match
// service_traits::DataType< ::transbot_msgs::Headlight >
template<>
struct DataType< ::transbot_msgs::HeadlightRequest>
{
  static const char* value()
  {
    return DataType< ::transbot_msgs::Headlight >::value();
  }
  static const char* value(const ::transbot_msgs::HeadlightRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::transbot_msgs::HeadlightResponse> should match
// service_traits::MD5Sum< ::transbot_msgs::Headlight >
template<>
struct MD5Sum< ::transbot_msgs::HeadlightResponse>
{
  static const char* value()
  {
    return MD5Sum< ::transbot_msgs::Headlight >::value();
  }
  static const char* value(const ::transbot_msgs::HeadlightResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::transbot_msgs::HeadlightResponse> should match
// service_traits::DataType< ::transbot_msgs::Headlight >
template<>
struct DataType< ::transbot_msgs::HeadlightResponse>
{
  static const char* value()
  {
    return DataType< ::transbot_msgs::Headlight >::value();
  }
  static const char* value(const ::transbot_msgs::HeadlightResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TRANSBOT_MSGS_MESSAGE_HEADLIGHT_H
